@{
    ViewData["Title"] = "Faculty Dashboard";
    Layout = "_Layout";
    
    // Get faculty dashboard data from the API
    var facultyDashboardData = ViewBag.FacultyDashboardData as AttendanceApp_ASPNET.Services.FacultyDashboardData;
    var hasRealData = ViewBag.HasFacultyDashboardData == true && facultyDashboardData != null;
    
    // Use real data if available, otherwise fall back to mock data
    var currentClass = hasRealData ? facultyDashboardData.ScheduleSummary?.CurrentClass : null;
    var nextClass = hasRealData ? facultyDashboardData.ScheduleSummary?.NextClass : null;
    var todaySchedule = hasRealData ? facultyDashboardData.TodaySchedule : new List<AttendanceApp_ASPNET.Services.FacultyScheduleItem>();
    var allSchedules = hasRealData ? facultyDashboardData.AllSchedules : new List<AttendanceApp_ASPNET.Services.FacultyScheduleItem>();
    var recentAttendance = hasRealData ? facultyDashboardData.RecentAttendance : new List<AttendanceApp_ASPNET.Services.FacultyRecentAttendance>();
    var currentCourses = hasRealData ? facultyDashboardData.CurrentCourses : new List<AttendanceApp_ASPNET.Services.FacultyCourseInfo>();
    
    var daysOfWeek = new[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" };
}

<!-- Hidden data elements for JavaScript -->
<script type="application/json" id="dashboard-data">@Html.Raw(Json.Serialize(allSchedules))</script>
<script type="application/json" id="faculty-dashboard-data">@Html.Raw(Json.Serialize(facultyDashboardData))</script>
<script type="application/json" id="weekly-attendance-trends-data">
    @Html.Raw(Json.Serialize(ViewBag.WeeklyAttendanceTrends ?? new List<AttendanceApp_ASPNET.Services.WeeklyAttendanceTrend>()))
</script>
<script type="text/plain" id="has-real-data">@(hasRealData.ToString().ToLower())</script>
<script type="text/plain" id="has-charts-data">@((ViewBag.HasChartsData == true).ToString().ToLower())</script>
<!-- Add weather data for faculty attendance modal -->
<script type="application/json" id="weather-data">{
    "temperature": @(ViewBag.Temperature ?? 0),
    "humidity": @(ViewBag.Humidity ?? 0),
    "heatIndex": @(ViewBag.HeatIndex ?? 0),
    "maxFeelsLike": @(ViewBag.MaxFeelsLike ?? 0),
    "maxTemperature": @(ViewBag.MaxTemperature ?? 0),
    "minTemperature": @(ViewBag.MinTemperature ?? 0),
    "weatherDataAvailable": @((ViewBag.WeatherDataAvailable == true).ToString().ToLower()),
    "weatherLocation": "@(ViewBag.WeatherLocation ?? "")",
    "weatherCondition": "@(ViewBag.WeatherCondition ?? "")"
}</script>

<!-- Also add ViewBag data to window object for JavaScript access -->
<script type="text/javascript">
    window.ViewBag = {
        Temperature: @(ViewBag.Temperature ?? 0),
        Humidity: @(ViewBag.Humidity ?? 0),
        HeatIndex: @(ViewBag.HeatIndex ?? 0),
        MaxFeelsLike: @(ViewBag.MaxFeelsLike ?? 0),
        MaxTemperature: @(ViewBag.MaxTemperature ?? 0),
        MinTemperature: @(ViewBag.MinTemperature ?? 0),
        WeatherDataAvailable: @((ViewBag.WeatherDataAvailable == true).ToString().ToLower()),
        WeatherLocation: "@(ViewBag.WeatherLocation ?? "")",
        WeatherCondition: "@(ViewBag.WeatherCondition ?? "")",
        // Add faculty info
        FirstName: "@(ViewBag.FirstName ?? "")",
        LastName: "@(ViewBag.LastName ?? "")",
        Department: "@(ViewBag.Department ?? "")",
        EmployeeNumber: "@(ViewBag.EmployeeNumber ?? "")",
        UserEmail: "@(ViewBag.UserEmail ?? "")"
    };
    console.log('Faculty ViewBag weather data:', window.ViewBag);
    
    // Add debug information for faculty dashboard
    console.log('=== FACULTY DASHBOARD DEBUG INFO ===');
    console.log('Has real data:', @(hasRealData.ToString().ToLower()));
    console.log('Current class:', @Html.Raw(Json.Serialize(currentClass)));
    console.log('Next class:', @Html.Raw(Json.Serialize(nextClass)));
    console.log('Today schedule count:', @todaySchedule.Count);
    console.log('Current courses count:', @currentCourses.Count);
    
    @if (currentClass != null)
    {
        @:console.log('Current class assigned course ID:', @currentClass.AssignedCourseId);
    }
    
    @if (nextClass != null)
    {
        @:console.log('Next class assigned course ID:', @nextClass.AssignedCourseId);
    }
    
    @if (todaySchedule.Any())
    {
        @:console.log('First today schedule assigned course ID:', @todaySchedule.First().AssignedCourseId);
    }
    
    @if (currentCourses.Any())
    {
        @:console.log('First current course assigned course ID:', @currentCourses.First().AssignedCourseId);
    }
    
    console.log('===================================');
</script>
@if (ViewBag.HasChartsData == true && ViewBag.ChartsData != null)
{
    <script type="application/json" id="charts-data">@Html.Raw(Json.Serialize(ViewBag.ChartsData))</script>
}

<!-- Welcome Section -->
<div class="mb-8">
    <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
        <!-- Welcome Card - Full Width -->
        <div class="col-span-1 lg:col-span-4 bg-gradient-to-r from-indigo-600 to-purple-800 rounded-lg p-6 text-white dashboard-card-entrance">
            <div class="flex flex-col md:flex-row items-start md:items-center justify-between">
                <div class="mb-4 md:mb-0">
                    <h1 class="text-2xl font-bold mb-2">Welcome back, @ViewBag.FirstName!</h1>
                    <p class="text-indigo-100">
                        Ready to manage your classes and track student attendance?
                    </p>
                </div>
                <div class="text-right">
                    @if (ViewBag.Verified == "1")
                    {
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 mt-2">
                            <i class="fas fa-check-circle mr-1"></i>
                            Verified
                        </span>
                    }
                    else
                    {
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 mt-2">
                            <i class="fas fa-clock mr-1"></i>
                            Pending Verification
                        </span>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Main Action Cards -->
<div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
    <!-- Current Class & Mark Attendance -->
    <div class="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow duration-200 dashboard-card-entrance relative" 
         data-current-class="true"
         @if (currentClass != null && currentClass.AssignedCourseId > 0)
         {
             @:data-assigned-course-id="@currentClass.AssignedCourseId"
             @:data-course-name="@currentClass.CourseName"
             @:data-course-code="@currentClass.CourseCode"
             @:data-section-name="@currentClass.SectionName"
             @:data-room="@(currentClass.Room ?? "TBA")"
             @:data-start-time="@currentClass.StartTime"
             @:data-end-time="@currentClass.EndTime"
             @:data-status="@currentClass.Status"
         }
         else if (nextClass != null && nextClass.AssignedCourseId > 0)
         {
             @:data-assigned-course-id="@nextClass.AssignedCourseId"
             @:data-course-name="@nextClass.CourseName"
             @:data-course-code="@nextClass.CourseCode"
             @:data-section-name="@nextClass.SectionName"
             @:data-room="@(nextClass.Room ?? "TBA")"
             @:data-start-time="@nextClass.StartTime"
             @:data-end-time="@nextClass.EndTime"
             @:data-status="@nextClass.Status"
         }
         else if (hasRealData && todaySchedule.Any())
         {
             var firstTodayClass = todaySchedule.Where(s => s.AssignedCourseId > 0).FirstOrDefault() ?? todaySchedule.First();
             @:data-assigned-course-id="@firstTodayClass.AssignedCourseId"
             @:data-course-name="@firstTodayClass.CourseName"
             @:data-course-code="@firstTodayClass.CourseCode"
             @:data-section-name="@firstTodayClass.SectionName"
             @:data-room="@(firstTodayClass.Room ?? "TBA")"
             @:data-start-time="@firstTodayClass.StartTime"
             @:data-end-time="@firstTodayClass.EndTime"
             @:data-status="@firstTodayClass.Status"
         }
         else if (hasRealData && currentCourses.Any())
         {
             var firstValidCourse = currentCourses.Where(c => c.AssignedCourseId > 0).FirstOrDefault() ?? currentCourses.First();
             @:data-assigned-course-id="@firstValidCourse.AssignedCourseId"
             @:data-course-name="@firstValidCourse.CourseName"
             @:data-course-code="@firstValidCourse.CourseCode"
             @:data-section-name="@firstValidCourse.SectionName"
             @:data-room="TBA"
             @:data-start-time="09:00"
             @:data-end-time="17:00"
             @:data-status="ongoing"
         }
         else if (!hasRealData)
         {
             @:data-assigned-course-id="1"
             @:data-course-name="Database Systems"
             @:data-course-code="CS-4203"
             @:data-section-name="4-2"
             @:data-room="Lecture Hall 1"
             @:data-start-time="11:00"
             @:data-end-time="19:00"
             @:data-status="ongoing"
         }>
        
        @{
            var isCurrentlyOngoing = currentClass != null && currentClass.Status?.ToString().ToLower() == "ongoing";
        }
        
        @if (isCurrentlyOngoing)
        {
            <!-- Mark Attendance Button - Only show for ongoing classes -->
            <div class="absolute top-4 right-4">
                <button data-action="mark-attendance" class="bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors duration-200 font-semibold flex items-center text-sm">
                    <i class="fas fa-user-check mr-2"></i>Mark Attendance
                </button>
            </div>
        }
        <!-- No button at all for next/upcoming classes or completed classes -->
        
        <!-- Dynamic current class data -->
        <div class="flex items-center mb-4 @(isCurrentlyOngoing ? "pr-40" : "")">
            <div class="w-12 h-12 bg-indigo-100 rounded-lg flex items-center justify-center">
                <i class="fas fa-@(isCurrentlyOngoing ? "chalkboard-teacher" : currentClass != null || nextClass != null ? "clock" : "calendar-times") text-indigo-600 text-xl"></i>
            </div>
            <div class="ml-4">
                <h3 class="text-lg font-semibold text-gray-900">
                    @if (isCurrentlyOngoing)
                    {
                        <span>Current Class</span>
                    }
                    else if (nextClass != null)
                    {
                        <span>Next Class</span>
                    }
                    else if (currentClass != null)
                    {
                        <span>@(currentClass.Status?.ToString() == "completed" ? "Last Class" : "Scheduled Class")</span>
                    }
                    else
                    {
                        <span>No Active Class</span>
                    }
                </h3>
                <p class="text-gray-500 text-sm">
                    @if (currentClass?.CourseName != null)
                    {
                        @currentClass.CourseName
                    }
                    else if (nextClass?.CourseName != null)
                    {
                        @nextClass.CourseName
                    }
                    else if (!hasRealData)
                    {
                        <span>Database Systems</span>
                    }
                    else
                    {
                        <span>No classes scheduled</span>
                    }
                </p>
            </div>
        </div>
        
        @if (currentClass != null || nextClass != null)
        {
            var displayClass = currentClass ?? nextClass;
            <div class="space-y-2">
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Course Code:</span>
                    <span class="text-sm font-medium text-gray-900">@(displayClass.CourseCode ?? "N/A")</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Section:</span>
                    <span class="text-sm font-medium text-gray-900">@displayClass.SectionName</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Room:</span>
                    <span class="text-sm font-medium text-gray-900">@(displayClass.Room ?? "TBA")</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Time:</span>
                    <span class="text-sm font-medium text-gray-900">@displayClass.StartTime - @displayClass.EndTime</span>
                </div>
                @if (hasRealData)
                {
                    var courseInfo = currentCourses.FirstOrDefault(c => c.AssignedCourseId == displayClass.AssignedCourseId);
                    <div class="flex justify-between items-center">
                        <span class="text-sm text-gray-600">Students:</span>
                        <span class="text-sm font-medium text-gray-900">@(courseInfo?.EnrolledStudents ?? 0) enrolled</span>
                    </div>
                }
                else
                {
                    <div class="flex justify-between items-center">
                        <span class="text-sm text-gray-600">Students:</span>
                        <span class="text-sm font-medium text-gray-900">42 enrolled</span>
                    </div>
                }
            </div>
        }
        else if (!hasRealData)
        {
            <!-- Fallback mock data -->
            <div class="space-y-2">
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Course Code:</span>
                    <span class="text-sm font-medium text-gray-900">CS-301</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Section:</span>
                    <span class="text-sm font-medium text-gray-900">BSCS-A</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Room:</span>
                    <span class="text-sm font-medium text-gray-900">Lab 203</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Time:</span>
                    <span class="text-sm font-medium text-gray-900">2:00 PM - 3:30 PM</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Students:</span>
                    <span class="text-sm font-medium text-gray-900">42 enrolled</span>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-4">
                <p class="text-gray-500 text-sm">No current or upcoming classes</p>
            </div>
        }
    </div>

    <!-- Weather Widget -->
    <div class="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow duration-200 dashboard-card-entrance">
        @if (ViewBag.WeatherDataAvailable == true)
        {
            <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                    @if (!string.IsNullOrEmpty(ViewBag.WeatherIcon?.ToString()))
                    {
                        <img src="https:@ViewBag.WeatherIcon" alt="Weather" class="w-8 h-8" />
                    }
                    else
                    {
                        <i class="fas fa-cloud-sun text-blue-600 text-xl"></i>
                    }
                </div>
                <div class="ml-4">
                    <h3 class="text-lg font-semibold text-gray-900">Weather</h3>
                    <p class="text-gray-500 text-sm">@ViewBag.WeatherLocation</p>
                </div>
            </div>
            <div class="space-y-2">
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Temperature:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.Temperature°C</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Wind speed:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.WindSpeed km/h</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Condition:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.WeatherCondition</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Humidity:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.Humidity%</span>
                </div>
            </div>
        }
        else
        {
            <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center">
                    <i class="fas fa-exclamation-triangle text-gray-400 text-xl"></i>
                </div>
                <div class="ml-4">
                    <h3 class="text-lg font-semibold text-gray-900">Weather</h3>
                    <p class="text-gray-500 text-sm">@(ViewBag.WeatherLocation ?? "Location unavailable")</p>
                </div>
            </div>
            <div class="text-center py-2">
                <p class="text-gray-500 text-sm">Weather data unavailable</p>
            </div>
        }
    </div>

    <!-- Heat Index Summary Card -->
    @if (ViewBag.WeatherDataAvailable == true)
    {
        <div class="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow duration-200 dashboard-card-entrance">
            <div class="flex items-center justify-between mb-4">
                <div class="flex items-center">
                    <div class="w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center">
                        <i class="fas fa-thermometer-half text-orange-600 text-xl"></i>
                    </div>
                    <div class="ml-4">
                        <h3 class="text-lg font-semibold text-gray-900">Temperature Forecast</h3>
                        <p class="text-gray-500 text-sm">@ViewBag.WeatherLocation</p>
                    </div>
                </div>
                <div class="text-right">
                    <div class="text-orange-600 text-sm font-medium">Max feels like</div>
                    <div class="text-2xl font-bold text-orange-600" data-max-feels-like="@ViewBag.MaxFeelsLike">@ViewBag.MaxFeelsLike°C</div>
                </div>
            </div>
            <div class="space-y-2">
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Current:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.Temperature°C</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">High today:</span>
                    <span class="text-sm font-medium text-red-600">@ViewBag.MaxTemperature°C</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Low today:</span>
                    <span class="text-sm font-medium text-blue-600">@ViewBag.MinTemperature°C</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Max feels like:</span>
                    <span class="text-sm font-medium text-orange-600">@ViewBag.MaxFeelsLike°C</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Heat level:</span>
                    <span class="text-sm font-medium text-orange-600">
                        @{
                            var heatIndexMain = ViewBag.HeatIndex != null ? (double)ViewBag.HeatIndex : 0;
                            var heatLevelMain = heatIndexMain >= 35 ? "Extreme" : heatIndexMain >= 30 ? "High" : heatIndexMain >= 25 ? "Moderate" : "Low";
                        }
                        @heatLevelMain
                    </span>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow duration-200 dashboard-card-entrance">
            <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center">
                    <i class="fas fa-exclamation-triangle text-gray-400 text-xl"></i>
                </div>
                <div class="ml-4">
                    <h3 class="text-lg font-semibold text-gray-900">Temperature Forecast</h3>
                    <p class="text-gray-500 text-sm">Location unavailable</p>
                </div>
            </div>
            <div class="text-center py-2">
                <p class="text-gray-500 text-sm">Weather data unavailable</p>
            </div>
        </div>
    }
</div>

<!-- Statistics Cards -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <!-- Total Courses -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray-600">Total Courses</p>
                <p class="text-2xl font-bold text-gray-900">@ViewBag.TotalCourses</p>
            </div>
            <div class="w-8 h-8 bg-indigo-100 rounded-full flex items-center justify-center">
                <i class="fas fa-book-open text-indigo-600"></i>
            </div>
        </div>
        <p class="mt-2 text-sm text-gray-500">Current semester</p>
    </div>

    <!-- Total Students -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray-600">Total Students</p>
                <p class="text-2xl font-bold text-blue-600">@ViewBag.TotalStudents</p>
            </div>
            <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                <i class="fas fa-users text-blue-600"></i>
            </div>
        </div>
        <p class="mt-2 text-sm text-gray-500">All sections</p>
    </div>

    <!-- Pending Reviews -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray-600">Pending Reviews</p>
                <p class="text-2xl font-bold text-yellow-600">@ViewBag.PendingReviews</p>
            </div>
            <div class="w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center">
                <i class="fas fa-clock text-yellow-600"></i>
            </div>
        </div>
        <p class="mt-2 text-sm text-gray-500">Student applications</p>
    </div>

    <!-- Today's Attendance -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray-600">Today's Attendance</p>
                <p class="text-2xl font-bold text-green-600">@ViewBag.TodayAttendanceCount</p>
            </div>
            <div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                <i class="fas fa-check-circle text-green-600"></i>
            </div>
        </div>
        <p class="mt-2 text-sm text-gray-500">Submissions today</p>
    </div>
</div>

<!-- Course Schedule Section -->
<div class="grid grid-cols-1 gap-8 mb-8">
    <div class="bg-white rounded-lg shadow-sm dashboard-card-entrance">
        <div class="p-6 border-b border-gray-200">
            <div class="flex items-center justify-between">
                <h3 class="text-lg font-semibold text-gray-900">Teaching Schedule</h3>
                <div class="flex space-x-2">
                    <a href="@Url.Action("Classes", "Faculty")" class="bg-indigo-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-indigo-700 transition-colors">
                        <i class="fas fa-cog mr-2"></i>Manage Classes
                    </a>
                </div>
            </div>
        </div>
        <div class="p-6">
            <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
                <!-- Calendar Widget -->
                <div class="lg:col-span-1">
                    <div class="bg-gray-50 rounded-lg p-4">
                        <h4 class="font-semibold text-gray-900 mb-3">Calendar</h4>
                        
                        <!-- Calendar Header -->
                        <div class="flex items-center justify-between mb-4">
                            <button id="prevMonth" class="p-1 hover:bg-gray-200 rounded">
                                <i class="fas fa-chevron-left text-gray-600"></i>
                            </button>
                            <h5 id="currentMonth" class="font-medium text-gray-900"></h5>
                            <button id="nextMonth" class="p-1 hover:bg-gray-200 rounded">
                                <i class="fas fa-chevron-right text-gray-600"></i>
                            </button>
                        </div>
                        
                        <!-- Calendar Grid -->
                        <div class="grid grid-cols-7 gap-1 mb-2">
                            <div class="text-xs font-medium text-gray-500 text-center py-1">Su</div>
                            <div class="text-xs font-medium text-gray-500 text-center py-1">Mo</div>
                            <div class="text-xs font-medium text-gray-500 text-center py-1">Tu</div>
                            <div class="text-xs font-medium text-gray-500 text-center py-1">We</div>
                            <div class="text-xs font-medium text-gray-500 text-center py-1">Th</div>
                            <div class="text-xs font-medium text-gray-500 text-center py-1">Fr</div>
                            <div class="text-xs font-medium text-gray-500 text-center py-1">Sa</div>
                        </div>
                        <div id="calendarDays" class="grid grid-cols-7 gap-1">
                            <!-- Calendar days will be populated by JavaScript -->
                        </div>
                        
                        <!-- Quick Filters -->
                        <div class="mt-4 space-y-2">
                            <button class="w-full text-left px-3 py-2 rounded-md text-sm font-medium bg-indigo-100 text-indigo-700 border border-indigo-200 day-filter active" data-day="today">
                                <i class="fas fa-calendar-day mr-2"></i>Today
                                <span class="float-right text-xs text-gray-500">@todaySchedule.Count</span>
                            </button>
                            <button class="w-full text-left px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100 day-filter" data-day="all">
                                <i class="fas fa-calendar-week mr-2"></i>All Days
                                <span class="float-right text-xs text-gray-500">@allSchedules.Count</span>
                            </button>
                        </div>
                    </div>
                </div>
                
                <!-- Schedule Content -->
                <div class="lg:col-span-3">
                    <!-- Today's Schedule -->
                    <div id="today-schedule" class="schedule-content">
                        <div class="mb-4">
                            <h5 class="font-medium text-gray-900">Today's Classes</h5>
                            <p class="text-sm text-gray-500">@DateTime.Now.ToString("dddd, MMMM d, yyyy")</p>
                        </div>
                        <div class="max-h-96 overflow-y-auto space-y-4 pr-2">
                            @if (hasRealData && todaySchedule.Any())
                            {
                                @foreach (var schedule in todaySchedule)
                                {
                                    var statusColor = schedule.Status == "ongoing" ? "blue" : schedule.Status == "completed" ? "gray" : "yellow";
                                    var courseInfo = currentCourses.FirstOrDefault(c => c.AssignedCourseId == schedule.AssignedCourseId);
                                    <div class="flex items-center justify-between p-4 bg-@(statusColor)-50 border-@(statusColor)-200 border rounded-lg schedule-item">
                                        <div>
                                            <p class="font-medium text-gray-900">@schedule.CourseName</p>
                                            <p class="text-sm text-gray-500">@schedule.SectionName • @(courseInfo?.EnrolledStudents ?? 0) students</p>
                                            <p class="text-sm text-gray-500">Room @(schedule.Room ?? "TBA")</p>
                                        </div>
                                        <div class="text-right">
                                            <p class="font-medium text-@(statusColor)-600">@schedule.StartTime - @schedule.EndTime</p>
                                            <p class="text-xs text-gray-500 capitalize">@schedule.Status</p>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-center py-8">
                                    <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3">
                                        <i class="fas fa-calendar-day text-gray-400 text-2xl"></i>
                                    </div>
                                    <p class="text-gray-500 text-sm">No classes scheduled for today</p>
                                </div>
                            }
                        </div>
                    </div>
                    
                    <!-- All Schedule (Hidden by default) -->
                    <div id="all-schedule" class="schedule-content hidden">
                        <div class="mb-4">
                            <h5 class="font-medium text-gray-900">All Classes</h5>
                            <p class="text-sm text-gray-500">Complete weekly schedule</p>
                        </div>
                        <div class="max-h-96 overflow-y-auto space-y-6 pr-2">
                            @if (hasRealData && allSchedules.Any())
                            {
                                @foreach (var dayGroup in allSchedules.GroupBy(s => s.DayOfWeek))
                                {
                                    <div>
                                        <h6 class="font-medium text-gray-800 mb-3">@dayGroup.Key</h6>
                                        <div class="space-y-3">
                                            @foreach (var schedule in dayGroup)
                                            {
                                                var courseInfo = currentCourses.FirstOrDefault(c => c.AssignedCourseId == schedule.AssignedCourseId);
                                                
                                                <div class="flex items-center justify-between p-3 bg-gray-50 border border-gray-200 rounded-lg">
                                                    <div>
                                                        <p class="font-medium text-gray-900">@schedule.CourseName</p>
                                                        <p class="text-sm text-gray-500">@schedule.SectionName • @(courseInfo?.EnrolledStudents ?? 0) students</p>
                                                    </div>
                                                    <div class="text-right">
                                                        <p class="font-medium text-gray-700">@schedule.StartTime - @schedule.EndTime</p>
                                                        <p class="text-xs text-gray-500">@(schedule.Room ?? "TBA")</p>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <!-- Fallback mock weekly schedule -->
                                @foreach (var day in new[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" })
                                {
                                    <div>
                                        <h6 class="font-medium text-gray-800 mb-3">@day</h6>
                                        <div class="space-y-3">
                                            <div class="flex items-center justify-between p-3 bg-gray-50 border border-gray-200 rounded-lg">
                                                <div>
                                                    <p class="font-medium text-gray-900">Database Systems</p>
                                                    <p class="text-sm text-gray-500">BSCS-A</p>
                                                </div>
                                                <div class="text-right">
                                                    <p class="font-medium text-gray-700">2:00 PM - 3:30 PM</p>
                                                    <p class="text-xs text-gray-500">Lab 203</p>
                                                </div>
                                            </div>
                                            <div class="flex items-center justify-between p-3 bg-gray-50 border border-gray-200 rounded-lg">
                                                <div>
                                                    <p class="font-medium text-gray-900">Software Engineering</p>
                                                    <p class="text-sm text-gray-500">BSCS-B</p>
                                                </div>
                                                <div class="text-right">
                                                    <p class="font-medium text-gray-700">4:00 PM - 5:30 PM</p>
                                                    <p class="text-xs text-gray-500">Room 301</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    
                    <!-- Selected Date Schedule will be dynamically inserted here by JavaScript -->
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Analytics and Charts Section -->
<div class="grid grid-cols-1 xl:grid-cols-3 gap-8 mb-8">
    <!-- Course Performance Overview -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance xl:col-span-1">
        <div class="flex items-center justify-between mb-6">
            <h3 class="text-lg font-semibold text-gray-900">Course Performance</h3>
            <div class="text-sm text-gray-500">Current Semester</div>
        </div>
        
        <!-- Overall Stats -->
        <div class="bg-gradient-to-r from-indigo-50 to-purple-100 rounded-lg p-4 mb-4 border border-indigo-200">
            <div class="text-center">
                <div class="text-3xl font-bold text-indigo-700">@ViewBag.AverageAttendance%</div>
                <div class="text-indigo-600 text-sm font-medium">Average Attendance Rate</div>
                <div class="text-indigo-500 text-xs mt-1">Across all courses</div>
            </div>
        </div>
        
        <!-- Course Stats -->
        <div class="space-y-3 max-h-64 overflow-y-auto pr-2">
            @if (hasRealData && currentCourses.Any())
            {
                @foreach (var course in currentCourses.Take(4))
                {
                    // Calculate simple performance based on enrollment vs total
                    var enrollmentRate = course.TotalStudents > 0 ? (double)course.EnrolledStudents / course.TotalStudents * 100 : 0;
                    var performanceLevel = enrollmentRate >= 90 ? "excellent" : enrollmentRate >= 75 ? "good" : enrollmentRate >= 60 ? "average" : "poor";
                    var performanceColor = performanceLevel == "excellent" ? "green" : 
                                         performanceLevel == "good" ? "green" : 
                                         performanceLevel == "average" ? "yellow" : "red";
                    
                    <div class="flex items-center justify-between p-3 bg-@(performanceColor)-50 rounded-lg border border-@(performanceColor)-200">
                        <div>
                            <div class="font-medium text-gray-900">@course.CourseName</div>
                            <div class="text-sm text-gray-500">@course.SectionName • @course.EnrolledStudents students</div>
                        </div>
                        <div class="text-right">
                            <div class="text-sm font-medium text-@(performanceColor)-600">@((int)enrollmentRate)%</div>
                            <div class="text-xs text-gray-500 capitalize">@performanceLevel</div>
                        </div>
                    </div>
                }
            }
            else
            {
                <!-- No data message -->
                <div class="text-center py-8">
                    <i class="fas fa-chart-bar text-gray-300 text-3xl mb-3"></i>
                    <p class="text-gray-500 text-sm">No course performance data available</p>
                    <p class="text-gray-400 text-xs mt-1">Performance metrics will appear when course data is loaded</p>
                </div>
            }
        </div>
    </div>

    <!-- Recent Activity (smaller) -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance xl:col-span-1">
        <div class="flex items-center justify-between mb-6">
            <h3 class="text-lg font-semibold text-gray-900">Recent Activity</h3>
            <div class="text-sm text-gray-500">Last 7 days</div>
        </div>
        
        <div class="space-y-4 max-h-80 overflow-y-auto pr-2">
            @if (hasRealData && recentAttendance.Any())
            {
                @foreach (var attendance in recentAttendance.Take(6))
                {
                    var statusColor = attendance.Status == "present" ? "green" : attendance.Status == "late" ? "yellow" : "red";
                    var statusIcon = attendance.Status == "present" ? "check-circle" : attendance.Status == "late" ? "clock" : "times-circle";
                    
                    <div class="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
                        <div class="w-8 h-8 bg-@(statusColor)-100 rounded-full flex items-center justify-center">
                            <i class="fas fa-@(statusIcon) text-@(statusColor)-600 text-sm"></i>
                        </div>
                        <div class="flex-1 min-w-0">
                            <p class="text-sm font-medium text-gray-900 truncate">@attendance.StudentName</p>
                            <p class="text-xs text-gray-500">@attendance.CourseName - @attendance.SectionName</p>
                        </div>
                        <div class="text-right">
                            <p class="text-xs text-gray-500">@(attendance.Date != null ? DateTime.Parse(attendance.Date).ToString("MMM dd") : "N/A")</p>
                            <p class="text-xs font-medium text-@(statusColor)-600 capitalize">@attendance.Status</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <!-- No data message -->
                <div class="text-center py-8">
                    <i class="fas fa-history text-gray-300 text-3xl mb-3"></i>
                    <p class="text-gray-500 text-sm">No recent activity data available</p>
                    <p class="text-gray-400 text-xs mt-1">Recent attendance activities will appear here</p>
                </div>
            }
        </div>
    </div>

    <!-- Weekly Attendance Trends (rightmost column, not below) -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance xl:col-span-1 xl:col-start-3">
        <div class="flex items-center justify-between mb-4">
            <h3 class="text-lg font-semibold text-gray-900">Weekly Attendance Trends</h3>
        </div>
        <div class="h-72 bg-gradient-to-br from-indigo-50 to-white rounded-xl shadow-inner p-4 flex items-center justify-center">
            <canvas id="weeklyTrendChart" class="max-w-full max-h-full"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/faculty-dashboard.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/faculty-mark-attendance.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var trendsDataElement = document.getElementById('weekly-attendance-trends-data');
            var chartCanvas = document.getElementById('weeklyTrendChart');
            if (trendsDataElement && chartCanvas) {
                var ctx = chartCanvas.getContext('2d');
                var trends = [];
                try {
                    trends = JSON.parse(trendsDataElement.textContent);
                } catch (e) {
                    trends = [];
                }
                if (!trends || !trends.length) {
                    trends = [
                        { day: 'Monday', percentage: 0 },
                        { day: 'Tuesday', percentage: 0 },
                        { day: 'Wednesday', percentage: 0 },
                        { day: 'Thursday', percentage: 0 },
                        { day: 'Friday', percentage: 0 },
                        { day: 'Saturday', percentage: 0 }
                    ];
                }
                // Shorten day names
                var dayShort = { 'Monday': 'Mon', 'Tuesday': 'Tue', 'Wednesday': 'Wed', 'Thursday': 'Thu', 'Friday': 'Fri', 'Saturday': 'Sat', 'Sunday': 'Sun' };
                var days = trends.map(t => dayShort[t.day] || t.day);
                var percentages = trends.map(t => t.percentage);
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: days,
                        datasets: [{
                            label: 'Attendance %',
                            data: percentages,
                            backgroundColor: 'rgba(99, 102, 241, 0.7)',
                            borderRadius: 12,
                            borderSkipped: false,
                            borderColor: 'rgba(99, 102, 241, 1)',
                            borderWidth: 1,
                            maxBarThickness: 48
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: { display: false },
                            tooltip: {
                                backgroundColor: 'rgba(30, 41, 59, 0.95)',
                                titleColor: '#fff',
                                bodyColor: '#fff',
                                borderColor: 'rgba(99,102,241,0.2)',
                                borderWidth: 1,
                                callbacks: {
                                    label: function(context) {
                                        return context.parsed.y + '%';
                                    }
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 100,
                                grid: {
                                    color: 'rgba(99,102,241,0.08)',
                                    borderDash: [4, 4]
                                },
                                ticks: {
                                    color: '#6366f1',
                                    font: { weight: 'bold' }
                                },
                                title: { display: true, text: 'Attendance %', color: '#6366f1', font: { weight: 'bold' } }
                            },
                            x: {
                                grid: {
                                    display: false
                                },
                                ticks: {
                                    color: '#6366f1',
                                    font: { weight: 'bold' }
                                },
                                title: { display: true, text: 'Day', color: '#6366f1', font: { weight: 'bold' } }
                            }
                        }
                    }
                });
            }
        });
    </script>
    
    <style>
        /* Ensure content is visible by default */
        .dashboard-card-entrance {
            opacity: 1 !important;
            transform: translateY(0) !important;
        }
        
        .schedule-content:not(.hidden) {
            opacity: 1 !important;
            transform: translateX(0) !important;
        }
        
        /* Calendar specific styles */
        .calendar-day {
            transition: all 0.2s ease-in-out;
            transform: scale(1);
            cursor: pointer;
        }
        
        .calendar-day:hover {
            transform: scale(1.05);
            background-color: #e5e7eb;
        }
        
        .calendar-day.today-date {
            background-color: #4f46e5 !important;
            color: white !important;
        }
        
        .calendar-day.selected:not(.today-date) {
            background-color: #4f46e5 !important;
            color: white !important;
            box-shadow: 0 0 0 2px #4f46e5;
        }
        
        /* Day filter styling */
        .day-filter {
            transition: all 0.2s ease-in-out;
            cursor: pointer;
        }
        
        .day-filter:hover {
            transform: translateX(4px);
        }
        
        .day-filter.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
            color: white !important;
            border-color: #667eea !important;
        }
        
        /* Chart enhancements */
        .chart-container {
            position: relative;
            height: 100%;
            width: 100%;
            border-radius: 12px;
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
        }
        
        /* Faculty color scheme */
        .faculty-primary { color: #667eea; }
        .faculty-secondary { color: #764ba2; }
        .faculty-accent { color: #f093fb; }
        
        /* Performance indicators */
        .performance-excellent { border-left: 4px solid #10b981; }
        .performance-good { border-left: 4px solid #3b82f6; }
        .performance-average { border-left: 4px solid #f59e0b; }
        .performance-poor { border-left: 4px solid #ef4444; }
        
        /* Selected date schedule styling */
        #selected-date-schedule {
            opacity: 1 !important;
            transform: translateX(0) !important;
        }
        
        /* Calendar day selection feedback */
        .calendar-day.selected {
            transform: scale(1.1) !important;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.3) !important;
        }
        
        /* Schedule item hover effects */
        .schedule-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        
        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .calendar-day {
                font-size: 0.75rem;
            }
            
            .chart-container {
                height: 16rem;
            }
        }
    </style>
}