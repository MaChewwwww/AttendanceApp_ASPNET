<!-- Camera Modal -->
<div id="cameraModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 animate-fade-in">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
            <div class="p-6">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-900">Take Your Photo</h3>
                    <button id="closeCameraModal" class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                
                <div class="mb-4">
                    <video id="cameraVideo" class="w-full h-64 bg-gray-100 rounded-lg" autoplay playsinline></video>
                    <canvas id="cameraCanvas" class="hidden"></canvas>
                </div>
                
                <div class="flex space-x-3">
                    <button id="captureBtn" class="flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors">
                        <svg class="w-5 h-5 inline mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"></path>
                        </svg>
                        Capture Photo
                    </button>
                    <button id="cancelCameraBtn" class="flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-400 transition-colors">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
window.cameraModal = {
    video: null,
    canvas: null,
    stream: null,
    callback: null,
    
    open: function(onCapture) {
        this.callback = onCapture;
        this.video = document.getElementById('cameraVideo');
        this.canvas = document.getElementById('cameraCanvas');
        
        document.getElementById('cameraModal').classList.remove('hidden');
        
        // Request camera access
        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => {
                this.stream = stream;
                this.video.srcObject = stream;
            })
            .catch(err => {
                console.error('Error accessing camera:', err);
                alert('Unable to access camera. Please check permissions.');
                this.close();
            });
    },
    
    close: function() {
        if (this.stream) {
            this.stream.getTracks().forEach(track => track.stop());
            this.stream = null;
        }
        document.getElementById('cameraModal').classList.add('hidden');
    },
    
    capture: function() {
        if (!this.video || !this.canvas) return;
        
        const context = this.canvas.getContext('2d');
        this.canvas.width = this.video.videoWidth;
        this.canvas.height = this.video.videoHeight;
        
        context.drawImage(this.video, 0, 0);
        // Changed from 'image/jpeg' to 'image/png' - PNG is lossless format
        const dataURL = this.canvas.toDataURL('image/png');
        
        if (this.callback) {
            this.callback(dataURL);
        }
        
        this.close();
    }
};

document.addEventListener('DOMContentLoaded', function() {
    document.getElementById('captureBtn').addEventListener('click', function() {
        window.cameraModal.capture();
    });
    
    document.getElementById('cancelCameraBtn').addEventListener('click', function() {
        window.cameraModal.close();
    });
    
    document.getElementById('closeCameraModal').addEventListener('click', function() {
        window.cameraModal.close();
    });
    
    // Close modal when clicking outside
    document.getElementById('cameraModal').addEventListener('click', function(e) {
        if (e.target === this) {
            window.cameraModal.close();
        }
    });
});
</script>
