@{
    ViewData["Title"] = "Dashboard";
    Layout = "_Layout";
    
    // Declare variables at the top level to ensure they're available throughout the view
    var dashboardData = ViewBag.DashboardData as AttendanceApp_ASPNET.Services.StudentDashboardData;
    var todaySchedule = dashboardData?.TodaySchedule ?? new List<AttendanceApp_ASPNET.Services.DashboardScheduleItem>();
    var allSchedules = dashboardData?.AllSchedules ?? new List<AttendanceApp_ASPNET.Services.DashboardScheduleItem>();
    var daysOfWeek = new[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" };
}

<!-- Hidden data elements for JavaScript -->
<script type="application/json" id="dashboard-data">@Html.Raw(Json.Serialize(allSchedules))</script>
<script type="text/plain" id="onboarding-alert">@(ViewBag.ShowOnboardingAlert?.ToString().ToLower() ?? "false")</script>
<script type="text/plain" id="has-attendance-data">@(ViewBag.HasAttendanceRate?.ToString().ToLower() ?? "false")</script>
<script type="text/plain" id="has-charts-data">@(ViewBag.HasAttendanceChartsData?.ToString().ToLower() ?? "false")</script>
@if (ViewBag.HasAttendanceChartsData == true && ViewBag.AttendanceChartsData != null)
{
    <script type="application/json" id="charts-data">@Html.Raw(Json.Serialize(ViewBag.AttendanceChartsData))</script>
}

<!-- Welcome Section with Heat Index -->
<div class="mb-8">
    <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
        <!-- Welcome Card - Full Width -->
        <div class="col-span-1 lg:col-span-4 bg-gradient-to-r from-blue-600 to-blue-800 rounded-lg p-6 text-white dashboard-card-entrance">
            <div class="flex flex-col md:flex-row items-start md:items-center justify-between">
                <div class="mb-4 md:mb-0">
                    <h1 class="text-2xl font-bold mb-2">Welcome back, @ViewBag.FirstName!</h1>
                    <p class="text-blue-100">
                        @if (ViewBag.IsOnboarded == true)
                        {
                            @:Ready to track your attendance today?
                        }
                        else
                        {
                            @:Your account setup is in progress.
                        }
                    </p>
                </div>
                <div class="text-right">
                    <div class="text-blue-100 text-sm">Student Number</div>
                    <div class="text-xl font-semibold">@ViewBag.StudentNumber</div>
                    @if (ViewBag.Verified == "1")
                    {
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 mt-2">
                            <i class="fas fa-check-circle mr-1"></i>
                            Verified
                        </span>
                    }
                    else
                    {
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 mt-2">
                            <i class="fas fa-clock mr-1"></i>
                            Pending Verification
                        </span>
                    }

                    @if (ViewBag.HasSection == true)
                    {
                        <div class="mt-1">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                <i class="fas fa-users mr-1"></i>
                                Section Assigned
                            </span>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Main Action Cards -->
<div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
    <!-- Current Class & Attendance Status -->
    <div class="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow duration-200 dashboard-card-entrance relative">
        @if (ViewBag.HasSection == true && ViewBag.CurrentClass != null)
        {
            <!-- Mark Attendance Button - Top Right Corner -->
            <div class="absolute top-4 right-4 mt-4">
                <button data-action="mark-attendance" class="bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700 transition-colors duration-200 font-semibold flex items-center text-sm">
                    <i class="fas fa-camera mr-2"></i>Mark Attendance
                </button>
            </div>
            
            <!-- Hidden data attributes for JavaScript -->
            <div data-current-class 
                 data-assigned-course-id="@ViewBag.CurrentClass.AssignedCourseId"
                 data-course-name="@ViewBag.CurrentClass.CourseName"
                 data-course-code="@(ViewBag.CurrentClass.CourseCode ?? "N/A")"
                 data-faculty-name="@ViewBag.CurrentClass.FacultyName"
                 data-room="@(ViewBag.CurrentClass.Room ?? "TBA")"
                 data-start-time="@ViewBag.CurrentClass.StartTime"
                 data-end-time="@ViewBag.CurrentClass.EndTime"
                 data-status="@ViewBag.CurrentClass.Status"
                 class="hidden"></div>
            
            <div class="flex items-center mb-4 pr-40">
                <div class="w-12 h-12 bg-indigo-100 rounded-lg flex items-center justify-center">
                    <i class="fas fa-clock text-indigo-600 text-xl"></i>
                </div>
                <div class="ml-4">
                    <h3 class="text-lg font-semibold text-gray-900">Current Class</h3>
                    <p class="text-gray-500 text-sm">@ViewBag.CurrentClass.CourseName</p>
                </div>
            </div>
            <div class="space-y-2">
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Course Code:</span>
                    <span class="text-sm font-medium text-gray-900">@(ViewBag.CurrentClass.CourseCode ?? "N/A")</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Faculty:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.CurrentClass.FacultyName</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Room:</span>
                    <span class="text-sm font-medium text-gray-900">@(ViewBag.CurrentClass.Room ?? "TBA")</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Time:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.CurrentClass.StartTime - @ViewBag.CurrentClass.EndTime</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Status:</span>
                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                        <i class="fas fa-clock mr-1"></i>
                        @{
                            var status = ViewBag.CurrentClass.Status?.ToString() ?? "Unknown";
                            var titleCaseStatus = char.ToUpper(status[0]) + status.Substring(1).ToLower();
                        }
                        @titleCaseStatus
                    </span>
                </div>
            </div>
        }
        else if (ViewBag.HasSection == true)
        {
            <!-- Has section but no current class -->
            <div class="absolute top-4 right-4">
                <button class="bg-gray-400 text-white py-2 px-4 rounded-lg cursor-not-allowed font-semibold flex items-center text-sm" disabled>
                    <i class="fas fa-clock mr-2"></i>No Active Class
                </button>
            </div>
            
            <div class="flex items-center mb-4 pr-32">
                <div class="w-16 h-16 bg-gray-100 rounded-lg flex items-center justify-center">
                    <i class="fas fa-calendar-times text-gray-400 text-2xl"></i>
                </div>
                <div class="ml-4">
                    <h3 class="text-lg font-semibold text-gray-900">No Current Class</h3>
                    <p class="text-gray-500 text-sm">No class is currently in session</p>
                </div>
            </div>
            <p class="text-xs text-gray-400">Check your schedule for upcoming classes</p>
        }
        else
        {
            <!-- No section assigned -->
            <div class="absolute top-4 right-4">
                <button class="bg-gray-400 text-white py-2 px-4 rounded-lg cursor-not-allowed font-semibold flex items-center text-sm" disabled>
                    <i class="fas fa-exclamation-triangle mr-2"></i>Section Required
                </button>
            </div>
            
            <div class="flex items-center mb-4 pr-32">
                <div class="w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center">
                    <i class="fas fa-exclamation-triangle text-yellow-600 text-xl"></i>
                </div>
                <div class="ml-4">
                    <h3 class="text-lg font-semibold text-gray-900">Current Class</h3>
                    <p class="text-gray-500 text-sm">Section assignment required</p>
                </div>
            </div>
            <p class="text-gray-500 text-sm">You need to be assigned to a section to view class information.</p>
        }
    </div>

    <!-- Weather Widget -->
    <div class="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow duration-200 dashboard-card-entrance">
        @if (ViewBag.WeatherDataAvailable == true)
        {
            <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                    @if (!string.IsNullOrEmpty(ViewBag.WeatherIcon?.ToString()))
                    {
                        <img src="https:@ViewBag.WeatherIcon" alt="Weather" class="w-8 h-8" />
                    }
                    else
                    {
                        <i class="fas fa-cloud-sun text-blue-600 text-xl"></i>
                    }
                </div>
                <div class="ml-4">
                    <h3 class="text-lg font-semibold text-gray-900">Weather</h3>
                    <p class="text-gray-500 text-sm">@ViewBag.WeatherLocation</p>
                </div>
            </div>
            <div class="space-y-2">
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Temperature:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.Temperature°C</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Wind speed:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.WindSpeed km/h</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Condition:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.WeatherCondition</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Humidity:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.Humidity%</span>
                </div>
                @if (ViewBag.RainChance != null && ViewBag.RainChance > 0)
                {
                    <div class="flex justify-between items-center">
                        <span class="text-sm text-gray-600">Rain chance:</span>
                        <span class="text-sm font-medium text-blue-600">@ViewBag.RainChance%</span>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center">
                    <i class="fas fa-exclamation-triangle text-gray-400 text-xl"></i>
                </div>
                <div class="ml-4">
                    <h3 class="text-lg font-semibold text-gray-900">Weather</h3>
                    <p class="text-gray-500 text-sm">@(ViewBag.WeatherLocation ?? "Location unavailable")</p>
                </div>
            </div>
            <div class="text-center py-2">
                <p class="text-gray-500 text-sm">@(ViewBag.WeatherError ?? "Weather data unavailable")</p>
            </div>
        }
    </div>

    <!-- Heat Index Summary Card -->
    @if (ViewBag.WeatherDataAvailable == true)
    {
        <div class="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow duration-200 dashboard-card-entrance">
            <div class="flex items-center justify-between mb-4">
                <div class="flex items-center">
                    <div class="w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center">
                        <i class="fas fa-thermometer-half text-orange-600 text-xl"></i>
                    </div>
                    <div class="ml-4">
                        <h3 class="text-lg font-semibold text-gray-900">Temperature Forecast</h3>
                        <p class="text-gray-500 text-sm">@ViewBag.WeatherLocation</p>
                    </div>
                </div>
                <div class="text-right">
                    <div class="text-orange-600 text-sm font-medium">Feels like now</div>
                    <div class="text-2xl font-bold text-orange-600">@ViewBag.HeatIndex°C</div>
                </div>
            </div>
            <div class="space-y-2">
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Current:</span>
                    <span class="text-sm font-medium text-gray-900">@ViewBag.Temperature°C</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">High today:</span>
                    <span class="text-sm font-medium text-red-600">@ViewBag.MaxTemperature°C</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Low today:</span>
                    <span class="text-sm font-medium text-blue-600">@ViewBag.MinTemperature°C</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Max feels like:</span>
                    <span class="text-sm font-medium text-orange-600">@ViewBag.MaxFeelsLike°C</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-600">Heat level:</span>
                    <span class="text-sm font-medium text-orange-600">
                        @{
                            var heatIndexMain = ViewBag.HeatIndex != null ? (double)ViewBag.HeatIndex : 0;
                            var heatLevelMain = heatIndexMain >= 35 ? "Extreme" : heatIndexMain >= 30 ? "High" : heatIndexMain >= 25 ? "Moderate" : "Low";
                        }
                        @heatLevelMain
                    </span>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="bg-white rounded-lg shadow-sm p-6 hover:shadow-md transition-shadow duration-200 dashboard-card-entrance">
            <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center">
                    <i class="fas fa-exclamation-triangle text-gray-400 text-xl"></i>
                </div>
                <div class="ml-4">
                    <h3 class="text-lg font-semibold text-gray-900">Temperature Forecast</h3>
                    <p class="text-gray-500 text-sm">@(ViewBag.WeatherLocation ?? "Location unavailable")</p>
                </div>
            </div>
            <div class="text-center py-2">
                <p class="text-gray-500 text-sm">@(ViewBag.WeatherError ?? "Weather data unavailable")</p>
            </div>
        </div>
    }
</div>

<!-- Statistics Cards -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <!-- Total Classes -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray-600">Enrolled Courses</p>
                <p class="text-2xl font-bold text-gray-900">
                    @if (ViewBag.HasDashboardData == true)
                    {
                        @ViewBag.TotalEnrolledCourses
                    }
                    else
                    {
                        @:24
                    }
                </p>
            </div>
            <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                <i class="fas fa-book text-blue-600"></i>
            </div>
        </div>
        <p class="mt-2 text-sm text-gray-500">
            @if (ViewBag.HasDashboardData == true)
            {
                @:Current semester
            }
            else
            {
                @:This semester
            }
        </p>
    </div>

    <!-- Attendance Rate -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray-600">Attendance Rate</p>
                @{
                    var hasRealAttendanceData = ViewBag.HasAttendanceRate == true;
                    var currentAttendanceRate = hasRealAttendanceData ? (double)ViewBag.AttendanceRate : 0;
                    var rateColorClass = currentAttendanceRate >= 90 ? "text-green-600" : 
                                        currentAttendanceRate >= 80 ? "text-yellow-600" : "text-red-600";
                }
                @if (hasRealAttendanceData)
                {
                    <p class="text-2xl font-bold @rateColorClass">@currentAttendanceRate.ToString("F0")%</p>
                }
                else
                {
                    <p class="text-2xl font-bold text-gray-400">--</p>
                }
            </div>
            <div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                <i class="fas fa-chart-line text-green-600"></i>
            </div>
        </div>
        <p class="mt-2 text-sm text-gray-500">
            @if (hasRealAttendanceData && ViewBag.AttendanceDetails != null)
            {
                var details = ViewBag.AttendanceDetails;
                @:@details.AcademicYear @details.Semester
            }
            else
            {
                @:This semester
            }
        </p>
    </div>

    <!-- Classes Today -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray-600">
                    @if (ViewBag.HasDashboardData == true)
                    {
                        @:Classes Today
                    }
                    else
                    {
                        @:Present
                    }
                </p>
                <p class="text-2xl font-bold text-yellow-600">
                    @if (ViewBag.HasDashboardData == true && ViewBag.DashboardData != null)
                    {
                        @ViewBag.DashboardData.ScheduleSummary.TotalClassesToday
                    }
                    else
                    {
                        @:18
                    }
                </p>
            </div>
            <div class="w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center">
                <i class="fas fa-check text-yellow-600"></i>
            </div>
        </div>
        <p class="mt-2 text-sm text-gray-500">
            @if (ViewBag.HasDashboardData == true)
            {
                @:@DateTime.Now.ToString("dddd")
            }
            else
            {
                @:75% attendance
            }
        </p>
    </div>

    <!-- Pending Approvals -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance">
        <div class="flex items-center justify-between">
            <div>
                <p class="text-sm font-medium text-gray-600">
                    @if (ViewBag.HasDashboardData == true)
                    {
                        @:Pending Approvals
                    }
                    else
                    {
                        @:Absent
                    }
                </p>
                <p class="text-2xl font-bold text-red-600">
                    @if (ViewBag.HasDashboardData == true)
                    {
                        @ViewBag.PendingApprovals
                    }
                    else
                    {
                        @:6
                    }
                </p>
            </div>
            <div class="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center">
                <i class="fas fa-times text-red-600"></i>
            </div>
        </div>
        <p class="mt-2 text-sm text-gray-500">
            @if (ViewBag.HasDashboardData == true)
            {
                @:Awaiting approval
            }
            else
            {
                @:25% missed
            }
        </p>
    </div>
</div>

<!-- Recent Activity & Upcoming Classes -->
<div class="grid grid-cols-1 gap-8 mb-8">
    <!-- Schedule with Calendar Filter -->
    <div class="bg-white rounded-lg shadow-sm dashboard-card-entrance">
        <div class="p-6 border-b border-gray-200">
            <h3 class="text-lg font-semibold text-gray-900">
                @if (ViewBag.HasDashboardData == true)
                {
                    @:Class Schedule
                }
                else
                {
                    @:Upcoming Classes
                }
            </h3>
        </div>
        <div class="p-6">
            @if (ViewBag.HasDashboardData == true && ViewBag.DashboardData != null)
            {
                <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
                    <!-- Calendar Widget -->
                    <div class="lg:col-span-1">
                        <div class="bg-gray-50 rounded-lg p-4">
                            <h4 class="font-semibold text-gray-900 mb-3">Calendar</h4>
                            
                            <!-- Calendar Header -->
                            <div class="flex items-center justify-between mb-4">
                                <button id="prevMonth" class="p-1 hover:bg-gray-200 rounded">
                                    <i class="fas fa-chevron-left text-gray-600"></i>
                                </button>
                                <h5 id="currentMonth" class="font-medium text-gray-900"></h5>
                                <button id="nextMonth" class="p-1 hover:bg-gray-200 rounded">
                                    <i class="fas fa-chevron-right text-gray-600"></i>
                                </button>
                            </div>
                            
                            <!-- Calendar Grid -->
                            <div class="grid grid-cols-7 gap-1 mb-2">
                                <div class="text-xs font-medium text-gray-500 text-center py-1">Su</div>
                                <div class="text-xs font-medium text-gray-500 text-center py-1">Mo</div>
                                <div class="text-xs font-medium text-gray-500 text-center py-1">Tu</div>
                                <div class="text-xs font-medium text-gray-500 text-center py-1">We</div>
                                <div class="text-xs font-medium text-gray-500 text-center py-1">Th</div>
                                <div class="text-xs font-medium text-gray-500 text-center py-1">Fr</div>
                                <div class="text-xs font-medium text-gray-500 text-center py-1">Sa</div>
                            </div>
                            <div id="calendarDays" class="grid grid-cols-7 gap-1">
                                <!-- Calendar days will be populated by JavaScript -->
                            </div>
                            
                            <!-- Quick Filters -->
                            <div class="mt-4 space-y-2">
                                <button class="w-full text-left px-3 py-2 rounded-md text-sm font-medium bg-blue-100 text-blue-700 border border-blue-200 day-filter active" data-day="today">
                                    <i class="fas fa-calendar-day mr-2"></i>Today
                                    <span class="float-right text-xs text-gray-500">@todaySchedule.Count</span>
                                </button>
                                <button class="w-full text-left px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100 day-filter" data-day="all">
                                    <i class="fas fa-calendar-week mr-2"></i>All Days
                                    <span class="float-right text-xs text-gray-500">@allSchedules.Count</span>
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Schedule Content -->
                    <div class="lg:col-span-3">
                        <!-- Today's Schedule -->
                        <div id="today-schedule" class="schedule-content">
                            <div class="mb-4">
                                <h5 class="font-medium text-gray-900">Today's Classes</h5>
                                <p class="text-sm text-gray-500">@DateTime.Now.ToString("dddd, MMMM d, yyyy")</p>
                            </div>
                            @if (todaySchedule.Count > 0)
                            {
                                <div class="max-h-96 overflow-y-auto space-y-4 pr-2">
                                    @foreach (var scheduleItem in todaySchedule)
                                    {
                                        var bgClass = scheduleItem.Status == "ongoing" ? "bg-yellow-50 border-yellow-200" :
                                                     scheduleItem.Status == "completed" ? "bg-gray-50 border-gray-200" : "bg-blue-50 border-blue-200";
                                        var textClass = scheduleItem.Status == "ongoing" ? "text-yellow-600" :
                                                       scheduleItem.Status == "completed" ? "text-gray-600" : "text-blue-600";

                                        <div class="flex items-center justify-between p-4 @bgClass border rounded-lg">
                                            <div>
                                                <p class="font-medium text-gray-900">@scheduleItem.CourseName</p>
                                                <p class="text-sm text-gray-500">@scheduleItem.FacultyName</p>
                                                @if (!string.IsNullOrEmpty(scheduleItem.Room))
                                                {
                                                    <p class="text-sm text-gray-500">Room @scheduleItem.Room</p>
                                                }
                                            </div>
                                            <div class="text-right">
                                                <p class="font-medium @textClass">
                                                    @if (!string.IsNullOrEmpty(scheduleItem.StartTime))
                                                    {
                                                        @scheduleItem.StartTime
                                                        @if (!string.IsNullOrEmpty(scheduleItem.EndTime))
                                                        {
                                                            @: - @scheduleItem.EndTime
                                                        }
                                                    }
                                                    else
                                                    {
                                                        @:TBA
                                                    }
                                                </p>
                                                <p class="text-xs text-gray-500 capitalize">@scheduleItem.Status</p>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-8">
                                    <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3">
                                        <i class="fas fa-calendar-day text-gray-400 text-2xl"></i>
                                    </div>
                                    <p class="text-gray-500 text-sm">No classes scheduled for today</p>
                                </div>
                            }
                        </div>
                        
                        <!-- Selected Date Schedule (Hidden by default) -->
                        <div id="selected-date-schedule" class="schedule-content hidden">
                            <div class="mb-4">
                                <h5 id="selectedDateTitle" class="font-medium text-gray-900">Selected Date</h5>
                                <p id="selectedDateSubtitle" class="text-sm text-gray-500"></p>
                            </div>
                            <div id="selectedDateContent" class="max-h-96 overflow-y-auto pr-2">
                                <!-- Content will be populated by JavaScript -->
                            </div>
                        </div>
                        
                        <!-- Weekly Schedule (Hidden by default) -->
                        @foreach (var day in daysOfWeek)
                        {
                            var daySchedules = allSchedules.Where(s => s.DayOfWeek.Equals(day, StringComparison.OrdinalIgnoreCase)).ToList();
                            <div id="@day.ToLower()-schedule" class="schedule-content hidden">
                                <div class="mb-4">
                                    <h5 class="font-medium text-gray-900">@day Classes</h5>
                                </div>
                                @if (daySchedules.Any())
                                {
                                    <div class="max-h-96 overflow-y-auto space-y-4 pr-2">
                                        @foreach (var scheduleItem in daySchedules)
                                        {
                                            <div class="flex items-center justify-between p-3 bg-gray-50 border border-gray-200 rounded-lg">
                                                <div>
                                                    <p class="font-medium text-gray-900">@scheduleItem.CourseName</p>
                                                    <p class="text-sm text-gray-500">@scheduleItem.FacultyName</p>
                                                </div>
                                                <div class="text-right">
                                                    <p class="font-medium text-gray-700">
                                                        @if (!string.IsNullOrEmpty(scheduleItem.StartTime))
                                                        {
                                                            @scheduleItem.StartTime
                                                            @if (!string.IsNullOrEmpty(scheduleItem.EndTime))
                                                            {
                                                                @: - @scheduleItem.EndTime
                                                            }
                                                        }
                                                        else
                                                        {
                                                            @:TBA
                                                        }
                                                    </p>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="text-center py-8">
                                        <p class="text-gray-500 text-sm">No classes scheduled for @day</p>
                                    </div>
                                }
                            </div>
                        }
                        
                        <!-- All Schedule -->
                        <div id="all-schedule" class="schedule-content hidden">
                            <div class="mb-4">
                                <h5 class="font-medium text-gray-900">All Classes</h5>
                                <p class="text-sm text-gray-500">Complete weekly schedule</p>
                            </div>
                            @if (allSchedules.Any())
                            {
                                <div class="max-h-96 overflow-y-auto space-y-6 pr-2">
                                    @foreach (var dayGroup in allSchedules.GroupBy(s => s.DayOfWeek).OrderBy(g => Array.IndexOf(daysOfWeek, g.Key)))
                                    {
                                        <div>
                                            <h6 class="font-medium text-gray-800 mb-3">@dayGroup.Key</h6>
                                            <div class="space-y-3">
                                                @foreach (var scheduleItem in dayGroup.OrderBy(s => s.StartTime))
                                                {
                                                    <div class="flex items-center justify-between p-3 bg-gray-50 border border-gray-200 rounded-lg">
                                                        <div>
                                                            <p class="font-medium text-gray-900">@scheduleItem.CourseName</p>
                                                            <p class="text-sm text-gray-500">@scheduleItem.FacultyName</p>
                                                        </div>
                                                        <div class="text-right">
                                                            <p class="font-medium text-gray-700">
                                                                @if (!string.IsNullOrEmpty(scheduleItem.StartTime))
                                                                {
                                                                    @scheduleItem.StartTime
                                                                    @if (!string.IsNullOrEmpty(scheduleItem.EndTime))
                                                                    {
                                                                        @: - @scheduleItem.EndTime
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    @:TBA
                                                                }
                                                            </p>
                                                            @if (!string.IsNullOrEmpty(scheduleItem.Room))
                                                            {
                                                                <p class="text-xs text-gray-500">Room @scheduleItem.Room</p>
                                                            }
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-8">
                                    <p class="text-gray-500 text-sm">No classes scheduled</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            else if (ViewBag.HasDashboardData == false && !string.IsNullOrEmpty(ViewBag.DashboardError?.ToString()))
            {
                <div class="text-center py-4">
                    <p class="text-gray-500 text-sm">Unable to load schedule: @ViewBag.DashboardError</p>
                </div>
            }
            else
            {
                <div class="space-y-4">    
                    <div class="text-center py-8">
                        <p class="text-gray-500 text-sm">No classes scheduled</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Attendance Charts Section - Combined Layout -->
<div class="grid grid-cols-1 xl:grid-cols-3 gap-8 mb-8">
    <!-- Attendance Overview Key Metrics -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance">
        <div class="flex items-center justify-between mb-6">
            <h3 class="text-lg font-semibold text-gray-900">Attendance Overview</h3>
            <div class="text-sm text-gray-500">
                @if (ViewBag.HasAttendanceRate == true && ViewBag.AttendanceDetails != null)
                {
                    var details = ViewBag.AttendanceDetails;
                    @:@details.AcademicYear @details.Semester
                }
                else
                {
                    @:Current Semester
                }
            </div>
        </div>
        
        @if (ViewBag.HasAttendanceRate == true && ViewBag.AttendanceDetails != null)
        {
            var details = ViewBag.AttendanceDetails;
            var totalClasses = details.TotalClasses;
            var presentClasses = details.PresentClasses;
            var lateClasses = details.LateClasses;
            var absentClasses = details.AbsentClasses;
            var attendanceRate = (double)ViewBag.AttendanceRate;
            
            <!-- Overall Rate Card -->
            <div class="bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 mb-4 border border-blue-200">
                <div class="text-center">
                    <div class="text-3xl font-bold text-blue-700">@attendanceRate.ToString("F1")%</div>
                    <div class="text-blue-600 text-sm font-medium">Overall Attendance Rate</div>
                    <div class="text-blue-500 text-xs mt-1">@presentClasses + @lateClasses attended out of @totalClasses classes</div>
                </div>
            </div>
            
            <!-- Metrics Grid -->
            <div class="grid grid-cols-3 gap-4">
                <!-- Present -->
                <div class="text-center p-4 bg-green-50 rounded-lg border border-green-200">
                    <div class="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-2">
                        <i class="fas fa-check text-green-600 text-lg"></i>
                    </div>
                    <div class="text-2xl font-bold text-green-700">@presentClasses</div>
                    <div class="text-green-600 text-sm font-medium">Present</div>
                    <div class="text-green-500 text-xs">@((presentClasses * 100.0 / totalClasses).ToString("F1"))%</div>
                </div>
                
                <!-- Late -->
                <div class="text-center p-4 bg-yellow-50 rounded-lg border border-yellow-200">
                    <div class="w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-2">
                        <i class="fas fa-clock text-yellow-600 text-lg"></i>
                    </div>
                    <div class="text-2xl font-bold text-yellow-700">@lateClasses</div>
                    <div class="text-yellow-600 text-sm font-medium">Late</div>
                    <div class="text-yellow-500 text-xs">@((lateClasses * 100.0 / totalClasses).ToString("F1"))%</div>
                </div>
                
                <!-- Absent -->
                <div class="text-center p-4 bg-red-50 rounded-lg border border-red-200">
                    <div class="w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-2">
                        <i class="fas fa-times text-red-600 text-lg"></i>
                    </div>
                    <div class="text-2xl font-bold text-red-700">@absentClasses</div>
                    <div class="text-red-600 text-sm font-medium">Absent</div>
                    <div class="text-red-500 text-xs">@((absentClasses * 100.0 / totalClasses).ToString("F1"))%</div>
                </div>
            </div>
            
            <!-- Additional Info -->
            <div class="mt-4 pt-4 border-t border-gray-200">
                <div class="flex justify-between text-sm text-gray-600">
                    <span>Total Classes:</span>
                    <span class="font-medium">@totalClasses</span>
                </div>
                <div class="flex justify-between text-sm text-gray-600 mt-1">
                    <span>Academic Period:</span>
                    <span class="font-medium">@details.AcademicYear @details.Semester</span>
                </div>
            </div>
        }
        else
        {
            <!-- No Data State -->
            <div class="text-center py-12">
                <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                    <i class="fas fa-chart-bar text-gray-400 text-2xl"></i>
                </div>
                <h4 class="text-gray-700 font-medium mb-2">No Attendance Data</h4>
                <p class="text-gray-500 text-sm">Your attendance overview will appear here once you start attending classes</p>
            </div>
        }
    </div>

    <!-- Weekly Attendance Trend -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance">
        <div class="flex items-center justify-between mb-4">
            <h3 class="text-lg font-semibold text-gray-900">Weekly Attendance Trend</h3>
            <div class="flex items-center space-x-2">
                <span class="w-3 h-3 bg-green-500 rounded-full"></span>
                <span class="text-sm text-gray-500">Present</span>
                <span class="w-3 h-3 bg-yellow-500 rounded-full ml-3"></span>
                <span class="text-sm text-gray-500">Late</span>
                <span class="w-3 h-3 bg-red-500 rounded-full ml-3"></span>
                <span class="text-sm text-gray-500">Absent</span>
            </div>
        </div>
        <div class="h-64">
            <canvas id="weeklyTrendChart" class="max-w-full max-h-full"></canvas>
        </div>
    </div>

    <!-- Course-wise Attendance -->
    <div class="bg-white rounded-lg shadow-sm p-6 dashboard-card-entrance flex flex-col h-full">
        <div class="flex items-center justify-between mb-4">
            <h3 class="text-lg font-semibold text-gray-900">Course Performance</h3>
            <i class="fas fa-chart-bar text-gray-400"></i>
        </div>
        <div class="flex-1 flex flex-col">
            <div class="space-y-3 max-h-64 overflow-y-auto pr-2 flex-1" id="courseWiseStats">
                <!-- Course stats will be populated by JavaScript -->
                <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                    <div>
                        <div class="font-medium text-gray-900">Loading...</div>
                        <div class="text-sm text-gray-500">Calculating rates...</div>
                    </div>
                    <div class="text-right">
                        <div class="text-sm font-medium text-gray-600">--%</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Monthly Attendance Pattern Section -->
<div class="grid grid-cols-1 gap-8 mb-8">
    <!-- Monthly Attendance Pattern -->
    <div class="bg-white rounded-xl shadow-lg p-8 dashboard-card-entrance border border-gray-100">
        <div class="flex items-center justify-between mb-6">
            <div>
                <h3 class="text-xl font-bold text-gray-900">Monthly Attendance Pattern</h3>
                <p class="text-sm text-gray-500 mt-1">Track your attendance progress over time</p>
            </div>
            <div class="flex items-center space-x-2">
                <div class="w-3 h-3 bg-blue-500 rounded-full"></div>
                <span class="text-sm font-medium text-gray-600">Attendance Rate</span>
            </div>
        </div>
        <div class="h-80 rounded-lg p-4">
            <canvas id="monthlyBarChart" class="max-w-full max-h-full"></canvas>
        </div>
        <div class="mt-4 flex items-center justify-center">
            <div class="text-xs text-gray-500 bg-gray-50 px-3 py-1 rounded-full">
                <i class="fas fa-info-circle mr-1"></i>
                Hover over points for detailed information
            </div>
        </div>
    </div>
</div>

<!-- Add weather data for JavaScript -->
@if (ViewBag.WeatherDataAvailable == true)
{
    <div data-max-feels-like="@ViewBag.MaxFeelsLike" class="hidden"></div>
}

@section Scripts {
    <script src="~/js/OnboardingModal.js"></script>
    <script src="~/js/dashboard.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/attendance-charts.js"></script>
    <script src="~/js/mark-attendance.js"></script>
    
    <style>
        /* Animation classes for schedule components */
        .schedule-card-enter {
            opacity: 0;
            transform: translateY(10px);
            transition: all 0.3s ease-out;
        }
        
        .schedule-card-enter-active {
            opacity: 1;
            transform: translateY(0);
        }
        
        .schedule-content {
            opacity: 0;
            transform: translateX(20px);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .schedule-content:not(.hidden) {
            opacity: 1;
            transform: translateX(0);
        }
        
        .calendar-day {
            transition: all 0.2s ease-in-out;
            transform: scale(1);
        }
        
        .calendar-day:hover {
            transform: scale(1.05);
            background-color: #e5e7eb;
        }
        
        .calendar-day.selected {
            animation: pulse 0.3s ease-in-out;
        }
        
        .calendar-day.today-date.selected {
            box-shadow: 0 0 0 2px white;
        }
        
        .calendar-day.selected:not(.today-date) {
            box-shadow: 0 0 0 2px #3b82f6;
        }
        
        .filter-button {
            transition: all 0.3s ease-in-out;
            transform: translateX(0);
        }
        
        .filter-button:hover {
            transform: translateX(3px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        .filter-button.active {
            animation: slideIn 0.3s ease-out;
        }
        
        .schedule-item {
            opacity: 0;
            transform: translateY(15px);
            animation: fadeInUp 0.5s ease-out forwards;
        }
        
        .schedule-item:nth-child(1) { animation-delay: 0.1s; }
        .schedule-item:nth-child(2) { animation-delay: 0.2s; }
        .schedule-item:nth-child(3) { animation-delay: 0.3s; }
        .schedule-item:nth-child(4) { animation-delay: 0.4s; }
        .schedule-item:nth-child(5) { animation-delay: 0.5s; }
        
        .calendar-nav {
            transition: all 0.2s ease-in-out;
        }
        
        .calendar-nav:hover {
            background-color: #d1d5db;
            transform: scale(1.1);
        }
        
        .calendar-nav:active {
            transform: scale(0.95);
        }
        
        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(15px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @@keyframes slideIn {
            from {
                transform: translateX(-10px);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        @@keyframes pulse {
            0% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
            100% {
                transform: scale(1);
            }
        }
        
        .loading-shimmer {
            background: linear-gradient(90deg, #f3f4f6 25%, #e5e7eb 50%, #f3f4f6 75%);
            background-size: 200% 100%;
            animation: shimmer 1.5s infinite;
        }
        
        @@keyframes shimmer {
            0% {
                background-position: -200% 0;
            }
            100% {
                background-position: 200% 0;
            }
        }
        
        .fade-transition {
            transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
        }
        
        .slide-up {
            animation: slideUp 0.4s ease-out;
        }
        
        @@keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        /* Custom scrollbar styling for schedule content */
        .max-h-96::-webkit-scrollbar {
            width: 6px;
        }
        
        .max-h-96::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 3px;
        }
        
        .max-h-96::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 3px;
        }
        
        .max-h-96::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }
        
        /* Firefox scrollbar styling */
        .max-h-96 {
            scrollbar-width: thin;
            scrollbar-color: #c1c1c1 #f1f1f1;
        }
        
        /* Chart container fixes */
        .chart-container {
            position: relative;
            height: 100%;
            width: 100%;
        }
        
        /* Prevent infinite scaling */
        canvas {
            max-width: 100% !important;
            max-height: 100% !important;
            height: auto !important;
            width: auto !important;
        }
        
        /* Course stats scrollbar */
        #courseWiseStats::-webkit-scrollbar {
            width: 4px;
        }
        
        #courseWiseStats::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 2px;
        }
        
        #courseWiseStats::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 2px;
        }
        
        #courseWiseStats::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }
        
        /* Enhanced chart styling */
        .chart-container {
            position: relative;
            height: 100%;
            width: 100%;
            border-radius: 12px;
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
        }
        
        /* Monthly chart specific styling */
        #monthlyBarChart {
            border-radius: 8px !important;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1) !important;
        }
        
        /* Improved card styling for monthly chart */
        .monthly-chart-card {
            background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
            border: 1px solid #e2e8f0;
            box-shadow: 
                0 10px 15px -3px rgba(0, 0, 0, 0.1),
                0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        
        .monthly-chart-card:hover {
            transform: translateY(-2px);
            box-shadow: 
                0 20px 25px -5px rgba(0, 0, 0, 0.1),
                0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        
        /* Chart background gradient */
        .chart-bg-gradient {
            background: linear-gradient(135deg, 
                rgba(59, 130, 246, 0.05) 0%, 
                rgba(99, 102, 241, 0.05) 50%, 
                rgba(139, 92, 246, 0.05) 100%);
        }
        
        /* Enhanced tooltip styling */
        .chartjs-tooltip {
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }
        
        /* Responsive adjustments for monthly chart */
        @@media (max-width: 768px) {
            .monthly-chart-card {
                padding: 1rem;
            }
            
            .monthly-chart-card h3 {
                font-size: 1.125rem;
            }
            
            .chart-bg-gradient {
                height: 16rem;
            }
        }
    </style>
}
